// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace JogoDeTenis.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Regras")]
    public partial class RegrasFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Regras.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Regras", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pontos do Jogador, valores validos")]
        [NUnit.Framework.TestCaseAttribute("0", null)]
        [NUnit.Framework.TestCaseAttribute("15", null)]
        [NUnit.Framework.TestCaseAttribute("30", null)]
        [NUnit.Framework.TestCaseAttribute("40", null)]
        public virtual void PontosDoJogadorValoresValidos(string pontos, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pontos do Jogador, valores validos", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given("que eu tenho um jogador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 7
    testRunner.When(string.Format("eu seto {0} como ponto do jogador", pontos), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 8
    testRunner.Then("nao deve ocorrer erro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pontos do Jogador, valores invalidos")]
        [NUnit.Framework.TestCaseAttribute("1", null)]
        [NUnit.Framework.TestCaseAttribute("16", null)]
        [NUnit.Framework.TestCaseAttribute("32", null)]
        [NUnit.Framework.TestCaseAttribute("45", null)]
        public virtual void PontosDoJogadorValoresInvalidos(string pontos, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pontos do Jogador, valores invalidos", exampleTags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
    testRunner.Given("que eu tenho um jogador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 18
    testRunner.When(string.Format("eu seto {0} como ponto do jogador", pontos), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 19
    testRunner.Then("deve ocorrer erro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Novo Jogo, jogador tem jogador")]
        public virtual void NovoJogoJogadorTemJogador()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Novo Jogo, jogador tem jogador", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 29
    testRunner.Then("deve ter dois jogadores", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 30
    testRunner.And("o jogador um deve ter 0 pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 31
    testRunner.And("o jogador dois deve ter 0 pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("jogador um marca ponto")]
        public virtual void JogadorUmMarcaPonto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("jogador um marca ponto", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 35
    testRunner.And("o jogador um tem quarenta pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 36
    testRunner.When("o jogador um pontua", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
    testRunner.Then("o jogador um ganha o jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("jogador dois marca ponto")]
        public virtual void JogadorDoisMarcaPonto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("jogador dois marca ponto", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 41
    testRunner.And("o jogador dois tem quarenta pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 42
    testRunner.When("o jogador dois pontua", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
    testRunner.Then("o jogador dois ganha o jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ambos jogadores atingem 40 pontos, ocorre deuce")]
        public virtual void AmbosJogadoresAtingem40PontosOcorreDeuce()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ambos jogadores atingem 40 pontos, ocorre deuce", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 47
    testRunner.And("o jogador um tem quarenta pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 48
    testRunner.And("o jogador dois tem quarenta pontos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 49
    testRunner.Then("o jogo esta deuce", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("jogo em deuce, quem pontua esta em vantagem")]
        public virtual void JogoEmDeuceQuemPontuaEstaEmVantagem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("jogo em deuce, quem pontua esta em vantagem", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 53
    testRunner.And("o jogo esta em deuce", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 54
    testRunner.When("o jogador um pontua", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 55
    testRunner.Then("o jogo vai para vantagem Jogador Um", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("vantagem do jogador um")]
        public virtual void VantagemDoJogadorUm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("vantagem do jogador um", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
    testRunner.Given("que eu tenho um novo jogo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 59
    testRunner.And("o jogo esta em vantagem do jogador um", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 60
    testRunner.When("o jogador dois pontua", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 61
    testRunner.Then("o jogo vai para deuce", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pontos do Jogador, nova pontuacao")]
        [NUnit.Framework.TestCaseAttribute("0", "15", null)]
        [NUnit.Framework.TestCaseAttribute("15", "30", null)]
        [NUnit.Framework.TestCaseAttribute("30", "40", null)]
        [NUnit.Framework.TestCaseAttribute("40", "40", null)]
        public virtual void PontosDoJogadorNovaPontuacao(string pontos, string novoponto, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pontos do Jogador, nova pontuacao", exampleTags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
    testRunner.Given("que eu tenho um jogador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 65
    testRunner.When(string.Format("o jogador tem {0}", pontos), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
    testRunner.And("ele pontua", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 67
    testRunner.Then(string.Format("vai para {0}", novoponto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
